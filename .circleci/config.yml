version: 2.1

orbs:
  codecov: codecov/codecov@1.0.5

workflows:
  version: 2
  test:
    jobs:
      - py27
      - py35
      - py36
      - py37
      - py38
      - pypy
      - pypy3
      - docs
      - flake8
      - check-manifest
      - black

jobs:
  py38: &test-template
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          # The pypy images run as root, and does not have sudo. We install
          # sudo to make the rest of the commands work both on circleci images
          # where sudo is required and on images where we are already root.
          name: Install sudo
          command: |
            if [ "$(whoami)" = "root" ]; then
              apt-get update
              apt-get install -y sudo
            fi
      - run:
          name: Install libspotify-dev
          command: |
            wget -q -O - https://apt.mopidy.com/mopidy.gpg | sudo apt-key add -
            sudo wget -q -O /etc/apt/sources.list.d/mopidy.list https://apt.mopidy.com/buster.list
            sudo apt-get update
            sudo apt-get install -y libspotify-dev
      - run:
          name: Install test dependencies
          command: sudo pip install tox || pip install tox
      - restore_cache:
          name: Restoring tox cache
          key: tox-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.cfg" }}
      - run:
          name: Run tests
          command: |
            tox -e $CIRCLE_JOB -- \
              --junit-xml=test-results/pytest/results.xml \
              --cov-report=xml
      - save_cache:
          name: Saving tox cache
          key: tox-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.cfg" }}
          paths:
            - ./.tox
            - ~/.cache/pip
      - codecov/upload:
          file: coverage.xml
      - store_test_results:
          path: test-results

  py27:
    <<: *test-template
    docker:
      - image: circleci/python:2.7

  py35:
    <<: *test-template
    docker:
      - image: circleci/python:3.5

  py36:
    <<: *test-template
    docker:
      - image: circleci/python:3.6

  py37:
    <<: *test-template
    docker:
      - image: circleci/python:3.7

  pypy:
    <<: *test-template
    docker:
      - image: pypy:2.7

  pypy3:
    <<: *test-template
    docker:
      - image: pypy:3.6

  docs: *test-template

  flake8: *test-template

  check-manifest: *test-template

  black: *test-template
