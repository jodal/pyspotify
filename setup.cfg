[metadata]
name = pyspotify
version = 2.1.4
url = https://pyspotify.readthedocs.io/
author = Stein Magnus Jodal
author_email = stein.magnus@jodal.no
license = Apache License, Version 2.0
license_file = LICENSE
description = Python wrapper for libspotify
long_description = file: README.rst
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Software Development :: Libraries


[options]
zip_safe = False
include_package_data = True
packages = find:
setup_requires =
    cffi >= 1.0.0
install_requires =
    cffi >= 1.0.0
    setuptools


[options.extras_require]
docs =
    mock
    sphinx == 4.5.0
lint =
    black
    check-manifest
    flake8
    flake8-black
    flake8-bugbear
    flake8-isort
    isort
release =
    delocate
    twine
    wheel
test =
    mock
    pytest
    pytest-cov
dev =
    invoke
    %(docs)s
    %(lint)s
    %(release)s
    %(test)s


[options.packages.find]
exclude =
    tests
    tests.*


[flake8]
application-import-names = spotify, tests
max-line-length = 80
exclude = .eggs, .git, .tox, .venv, build
select =
    # Regular flake8 rules
    C, E, F, W
    # flake8-bugbear rules
    B
    # B950: line too long (soft speed limit)
    B950
    # flake8-black rules
    BLK
    # pep8-naming rules
    N
ignore =
    # E203: whitespace before ':' (not PEP8 compliant)
    E203
    # E501: line too long (replaced by B950)
    E501
    # W503: line break before binary operator (not PEP8 compliant)
    W503
